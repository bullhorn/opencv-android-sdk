buildscript {
    repositories {
        mavenLocal()
        jcenter()
        google()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1' // Add this line
    }
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.pickuppdev'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
    }
}

task generateMySources(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

task addMySourcesToAar(type: Jar) {
    archiveName "opencv-android-source.aar"
    destinationDir file("build")
    from zipTree("build/outputs/aar/opencv-android.aar")
    from fileTree("build").include("libs/opencv-android-sources.jar")
}

afterEvaluate { project ->
    project.tasks.preBuild.dependsOn generateMySources
    project.addMySourcesToAar.dependsOn build
}

artifacts {
    archives addMySourcesToAar.archivePath
}