buildscript {
    repositories {
        mavenLocal()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.28.3"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

group = 'com.bullhorn'
version = '3.4.4'

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
    }
}

android {
    compileSdkVersion 30
    buildToolsVersion "30"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/java'
    }
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/opencv-android-sdk-release.aar")
            groupId 'org.opencv.android'
            artifactId 'opencv-android-sdk'
            version this.version

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

artifactory {
    publish {
        contextUrl = "https://artifactory.bullhorn.com/artifactory"

        repository {
            repoKey = version.contains('SNAPSHOT') ? 'bh-snapshots' : 'bh-releases'
            username = project.property('artifactoryUsername') ?: System.getenv('ARTIFACTORY_USER')
            password = project.property('artifactoryPassword') ?: System.getenv('ARTIFACTORY_PASS')
            maven = true
        }

        defaults {
            publications('Production')
            publishArtifacts = true
            publishPom = true
        }
    }
}
